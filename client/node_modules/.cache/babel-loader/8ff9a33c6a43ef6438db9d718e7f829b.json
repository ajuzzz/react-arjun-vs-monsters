{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDNrhmyJOZjX214r0QzC2C8Bh44zlJCKh0\",\n  authDomain: \"react-training-57bbc.firebaseapp.com\",\n  databaseURL: \"https://react-training-57bbc.firebaseio.com\",\n  projectId: \"react-training-57bbc\",\n  storageBucket: \"react-training-57bbc.appspot.com\",\n  messagingSenderId: \"139729907959\",\n  appId: \"1:139729907959:web:4af9cf4c7880af8ebca3f2\",\n  measurementId: \"G-FN88KK7GR3\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/Nodejs/React Training/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,sCAFF;AAGVC,EAAAA,WAAW,EAAE,6CAHH;AAIVC,EAAAA,SAAS,EAAE,sBAJD;AAKVC,EAAAA,aAAa,EAAE,kCALL;AAMVC,EAAAA,iBAAiB,EAAE,cANT;AAOVC,EAAAA,KAAK,EAAE,2CAPG;AAQVC,EAAAA,aAAa,EAAE;AARL,CAAd;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACxE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAOa,KAAP,EAAa;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOf,OAAP;AACD,CAvBI;AAyBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE,QAAMC,aAAa,GAAGnB,SAAS,CAACoB,UAAV,CAAqBH,aAArB,CAAtB;AACD,CAFM;AAIP,OAAO,MAAMI,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMsB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config ={\n    apiKey: \"AIzaSyDNrhmyJOZjX214r0QzC2C8Bh44zlJCKh0\",\n    authDomain: \"react-training-57bbc.firebaseapp.com\",\n    databaseURL: \"https://react-training-57bbc.firebaseio.com\",\n    projectId: \"react-training-57bbc\",\n    storageBucket: \"react-training-57bbc.appspot.com\",\n    messagingSenderId: \"139729907959\",\n    appId: \"1:139729907959:web:4af9cf4c7880af8ebca3f2\",\n    measurementId: \"G-FN88KK7GR3\"\n  };\n\n  export const createUserProfileDocument = async(userAuth, additionalData) => {\n      if (!userAuth) return;\n\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\n      const snapShot = await userRef.get();\n\n      if (!snapShot.exists) {\n          const {displayName,email } = userAuth;\n          const createdAt = new Date();\n\n          try{\n              await userRef.set({\n                  displayName,\n                  email,\n                  createdAt,\n                  ...additionalData\n              })\n          }catch (error){\n              console.log('error creating user' ,error.message);\n          }\n      }\n\n      return userRef;\n    }\n\n  firebase.initializeApp(config);\n\n  export const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n  }\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt: 'select_account' });\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase;\n  "]},"metadata":{},"sourceType":"module"}