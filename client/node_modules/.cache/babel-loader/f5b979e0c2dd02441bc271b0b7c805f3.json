{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/Nodejs/React Training/e-commerce/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","fetchCollectionStart","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAI;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAJ,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAI;AACnDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD6B;AAEnDH,EAAAA,OAAO,EAAEE;AAF0C,CAAJ,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAK;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACG,oBAAoB,EAArB,CAAR;AAEAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACrC,YAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAN,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHG,EAGDc,KAHC,CAGKC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAHtB;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\r\nimport {firestore,convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () =>{\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionStart());\r\n\r\n        collectionRef.get().then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}